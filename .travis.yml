# Link repository with Travis CI
# https://travis-ci.org/

# Whitelist gh-pages branch
branches:
  only:
    - master

# Set the language
language: bash

os:
  - osx
  - linux  # https://tex.stackexchange.com/questions/313768/why-getting-this-error-tlmgr-unknown-directive

env:
  global:
    # - PATH=$TRAVIS_BUILD_DIR/usr/bin/:$PATH
    # - PATH=/Library/TeX/texbin:$PATH
    - PATH="$PATH:$HOME/bin"
    - PATH="$PATH:$HOME/.local/bin"

python:
  # We don't actually use the Travis Python, but this keeps it organized.
  # - "2.7"
  # - "3.5"
  - "3.6"
  - "3.7"
  - "3.8"

addons:
  apt:
    packages:
    # - texlive
    - xzdec
    - python3-pip
    update: true
  homebrew:
    casks:
    - mactex
    update: true

before_install:
  # For debug
  - echo $PATH
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      eval "$(/usr/libexec/path_helper)"
      sudo tlmgr update --self
    elif [ "$TRAVIS_OS_NAME" = "linux" ]; then
      wget -qO- "https://yihui.org/tinytex/install-bin-unix.sh" | sh
      sudo env PATH=$PATH tlmgr update --self
      TEMP_DEB="$(mktemp)" && wget -O "$TEMP_DEB" 'https://github.com/jgm/pandoc/releases/download/2.11.4/pandoc-2.11.4-1-amd64.deb' && sudo dpkg -i "$TEMP_DEB"
      rm -f "$TEMP_DEB"
      echo MSG FROM JO:
      echo on linux we cannot update apt installed texlive
      echo next steps to fix see commit msg: https://github.com/tompollard/phd_thesis_markdown/pull/100/commits/85fd9e7ac413a34066b79f1e49b3e1d3efdeac00
      echo c.f. https://tex.stackexchange.com/questions/551383/cant-run-tex-lives-tlmgr-in-a-github-action
      echo and https://tex.stackexchange.com/questions/1092/how-to-install-vanilla-texlive-on-debian-or-ubuntu

    fi
  # Install conda
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      OS_NAME=MacOSX
    elif [ "$TRAVIS_OS_NAME" = "linux" ]; then
      OS_NAME=Linux
    fi
  - |
    if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-${OS_NAME}-x86_64.sh -O miniconda.sh
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-${OS_NAME}-x86_64.sh -O miniconda.sh
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # The install of mactex...takes a long time: ~20mins
  # investigate using a docker image to save time?:
  #     https://tex.stackexchange.com/questions/398830/how-to-build-my-latex-automatically-using-travis-ci
  # This is now done in the 'addons:' travis config above
  # - |
  #   if [ "$TRAVIS_OS_NAME" = "osx" ]; then
  #     brew update && brew upgrade
  #     brew install --cask mactex
  #     sudo tlmgr update --self
  #   elif [ "$TRAVIS_OS_NAME" = "linux" ]; then
  #     sudo apt-get install texlive
  #   fi
  # For debug
  - echo $PATH

install:
  # Make python venv
  - conda create -n phd python=${PYTHON_VERSION} pandoc
  - conda activate phd
  # Installs both python and texlive dependencies
  - make install
  # For debug
  # - cat /usr/local/texlive/2020/texmf-var/web2c/tlmgr.log
  # - conda list
  # - pip list
  # - python --version
  # - pandoc --version
  # - tlmgr --version
  # - latex --version
  # - echo $PATH
  # - which tlmgr
  # - which latex
  # - find /usr/local/texlive/2020/ -type f -name "l3backend*"

# Attempt to create all document output types
script:
  - echo ========================== beginning testing script ==========================
  - make help
  - make tex
  - cat pandoc.tex.log
  - make pdf
  - cat pandoc.pdf.log
  # Debugging the mac error
  # - find /usr/local/texlive/2020/ -type f -name "l3backend*"
  - make html
  - cat pandoc.html.log
  - make docx
  # - cat pandoc.docx.log
  - make all
  # - cat pandoc.*.log
